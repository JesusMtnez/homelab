---
- name: DietPi bootstrap image
  hosts: localhost
  gather_facts: false

  vars:
    dietpi_txt: /tmp/dietpi/dietpi.txt
    dietpi_image: /tmp/dietpi/DietPi_RPi-ARMv8-Bookworm.img
    img: DietPi_RPi-ARMv8-Bookworm.img

  tasks:

    - name: Create output dir
      ansible.builtin.file:
        path: /tmp/dietpi
        state: directory
        mode: u=rwx,g=rx,o=rx
      register: output_dir

    - name: Dietpi.txt | Download dietpi.txt from MichaIng/DietPi
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/MichaIng/DietPi/master/dietpi.txt
        dest: "{{ dietpi_txt }}"
        checksum: sha256:341e3d505fc7612d34b5ca27269d665193b1f4d2c264af6bfda32004528af32f
        mode: u=rw,g=r,o=r

    - name: Dietpi.txt | Generate configuration file for each host
      ansible.builtin.include_tasks: tasks/dietpi-gen-txt.yml
      loop: "{{ groups['kubernetes'] }}"

    - name: Dietpi IMG | Download {{ img }}
      ansible.builtin.get_url:
        url: https://dietpi.com/downloads/images/{{ img }}.xz
        dest: "{{ dietpi_image }}.xz"
        checksum: "sha256:https://dietpi.com/downloads/images/{{ img }}.xz.sha256"
        mode: u=rw,g=r,o=r

    - name: Dietpi IMG | Decompress
      ansible.builtin.command:
        chdir: "{{ output_dir.path }}"
        cmd: "xz --decompress {{ img }}.xz"
      changed_when: false

    - name: Dietpi IMG | Delete compressed image
      ansible.builtin.file:
        path: "{{ dietpi_image }}.xz"
        state: absent

    - name: Dietpi IMG | Create temporary mount dir
      ansible.builtin.tempfile:
        state: directory
      register: mount_dir

    - name: Dietpi IMG | Generate image for each host
      ansible.builtin.include_tasks: tasks/dietpi-gen-image.yml
      loop: "{{ groups['kubernetes'] }}"

    - name: Clean up
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ dietpi_txt }}"
        - "{{ dietpi_image }}"
